read_delim(here::here("satellite_data","manoeuvres", "cs2man.txt"))
read.table(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Read the data
tle_data <- readLines(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Split data by multiple spaces using read.table
tle_parsed <- read.table(text = tle_data, header = FALSE, fill = TRUE,
sep = "", strip.white = TRUE)
# View the parsed data
print(tle_parsed)
pacman::p_load(tidyverse)
install.packages(pacman)
install.packages("pacman")
pacman::p_load(tidyverse)
read.table(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Read the data
tle_data <- readLines(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Split data by multiple spaces using read.table
tle_parsed <- read.table(text = tle_data, header = FALSE, fill = TRUE,
sep = "", strip.white = TRUE)
# View the parsed data
print(tle_parsed)
View(tle_parsed)
# Rename specific columns by position (e.g., columns 1 and 5)
colnames(tle_parsed)[c(1, 5)] <- c("satellite_name", "minute_1")
# View the renamed columns
head(tle_parsed)
read.table(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Read the data
tle_data <- readLines(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Split data by multiple spaces using read.table
tle_parsed <- read.table(text = tle_data, header = FALSE, fill = TRUE,
sep = "", strip.white = TRUE)
# View the parsed data
print(tle_parsed)
read.table(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Read the data
tle_data <- readLines(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Split data by multiple spaces using read.table
tle_parsed <- read.table(text = tle_data, header = FALSE, fill = TRUE,
sep = "", strip.white = TRUE)
# View the parsed data
print(tle_parsed)
# Rename columns manually
colnames(tle_parsed) <- c("satellite_name",     # Col 1: Satellite identification
"beg_man_year",       # Col 2: Beginning of maneuver: Year
"beg_man_day",        # Col 3: Beginning of maneuver: Day of year
"beg_man_hour",       # Col 4: Beginning of maneuver: hour
"beg_man_min",        # Col 5: Beginning of maneuver: minute
"end_man_year",       # Col 6: End of maneuver: Year
"end_man_day",        # Col 7 : End of maneuver: Day of year
"end_man_hour",       # Col 8: End of maneuver: hour
"end_man_min",        # Col 9: End of maneuver: minute (last column for topex)
"man_parameter_type", # Col 10: Maneuver parameter type
"num_burns",          # Col 11: number of burns (N)
"med_man_year",       # Col 12: median date of maneuver: Year YYYY
"med_man_day",        # Col 13: median date of maneuver: Day of year DDD
"med_man_hour",       # Col 14: median date of maneuver: hour HH
"med_man_min",        # Col 15: median date of maneuver: minute MM
"med_man_sec",        # Col 16: median date of maneuver: second.mlsecond:  SS.mss
"boost_duration",     # Col 17: boost duration (sec) [E20.13]
"DV_1",               # Col 18: DV(1) (m/s)  [E20.13]
"DV_2",               # Col 19: DV(2) (m/s)  [E20.13]
"DV_3",               # Col 20: DV(3) (m/s)  [E20.13]
"acc_1",              # Col 21: acceleration, acc(1) (10-6m/s2)  [E20.13]
"acc_2",              # Col 22: acceleration, acc(2) (10-6m/s2)  [E20.13]
"acc_3",              # Col 23: acceleration, acc(3) (10-6m/s2)  [E20.13]
"delta_acc_1",        # Col 24: delta acc(1) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_2",        # Col 25: delta acc(2) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_3",        # Col 26: delta acc(3) wrt prediction (10-6m/s2)[E20.13]
"med_man_year_burn2", # Col 27: median date of maneuver: Year YYYY
"med_man_day_burn2",  # Col 28: median date of maneuver: Day of year DDD
"med_man_hour_burn2", # Col 29: median date of maneuver: hour HH
"med_man_min_burn2",  # Col 30: median date of maneuver: minute MM
"med_man_sec_burn2",  # Col 31: median date of maneuver: second.mlsecond:  SS.mss
"boost_duration_burn2", # Col 32: boost duration (sec) [E20.13]
"DV_1_burn2",         # Col 33: DV(1) (m/s)  [E20.13]
"DV_2_burn2",         # Col 34: DV(2) (m/s)  [E20.13]
"DV_3_burn2",         # Col 35: DV(3) (m/s)  [E20.13]
"acc_1_burn2",        # Col 36: acceleration, acc(1) (10-6m/s2)  [E20.13]
"acc_2_burn2",        # Col 37: acceleration, acc(2) (10-6m/s2)  [E20.13]
"acc_3_burn2",        # Col 38: acceleration, acc(3) (10-6m/s2)  [E20.13]
"delta_acc_1_burn2",  # Col 39: delta acc(1) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_2_burn2",  # Col 40: delta acc(2) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_3_burn2",  # Col 41: delta acc(3) wrt prediction (10-6m/s2)[E20.13]
)
# View the renamed columns
head(tle_parsed)
# Rename columns manually
colnames(tle_parsed) <- c("ID", "satellite_name",     # Col 1: Satellite identification
"beg_man_year",       # Col 2: Beginning of maneuver: Year
"beg_man_day",        # Col 3: Beginning of maneuver: Day of year
"beg_man_hour",       # Col 4: Beginning of maneuver: hour
"beg_man_min",        # Col 5: Beginning of maneuver: minute
"end_man_year",       # Col 6: End of maneuver: Year
"end_man_day",        # Col 7 : End of maneuver: Day of year
"end_man_hour",       # Col 8: End of maneuver: hour
"end_man_min",        # Col 9: End of maneuver: minute (last column for topex)
"man_parameter_type", # Col 10: Maneuver parameter type
"num_burns",          # Col 11: number of burns (N)
"med_man_year",       # Col 12: median date of maneuver: Year YYYY
"med_man_day",        # Col 13: median date of maneuver: Day of year DDD
"med_man_hour",       # Col 14: median date of maneuver: hour HH
"med_man_min",        # Col 15: median date of maneuver: minute MM
"med_man_sec",        # Col 16: median date of maneuver: second.mlsecond:  SS.mss
"boost_duration",     # Col 17: boost duration (sec) [E20.13]
"DV_1",               # Col 18: DV(1) (m/s)  [E20.13]
"DV_2",               # Col 19: DV(2) (m/s)  [E20.13]
"DV_3",               # Col 20: DV(3) (m/s)  [E20.13]
"acc_1",              # Col 21: acceleration, acc(1) (10-6m/s2)  [E20.13]
"acc_2",              # Col 22: acceleration, acc(2) (10-6m/s2)  [E20.13]
"acc_3",              # Col 23: acceleration, acc(3) (10-6m/s2)  [E20.13]
"delta_acc_1",        # Col 24: delta acc(1) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_2",        # Col 25: delta acc(2) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_3",        # Col 26: delta acc(3) wrt prediction (10-6m/s2)[E20.13]
"med_man_year_burn2", # Col 27: median date of maneuver: Year YYYY
"med_man_day_burn2",  # Col 28: median date of maneuver: Day of year DDD
"med_man_hour_burn2", # Col 29: median date of maneuver: hour HH
"med_man_min_burn2",  # Col 30: median date of maneuver: minute MM
"med_man_sec_burn2",  # Col 31: median date of maneuver: second.mlsecond:  SS.mss
"boost_duration_burn2", # Col 32: boost duration (sec) [E20.13]
"DV_1_burn2",         # Col 33: DV(1) (m/s)  [E20.13]
"DV_2_burn2",         # Col 34: DV(2) (m/s)  [E20.13]
"DV_3_burn2",         # Col 35: DV(3) (m/s)  [E20.13]
"acc_1_burn2",        # Col 36: acceleration, acc(1) (10-6m/s2)  [E20.13]
"acc_2_burn2",        # Col 37: acceleration, acc(2) (10-6m/s2)  [E20.13]
"acc_3_burn2",        # Col 38: acceleration, acc(3) (10-6m/s2)  [E20.13]
"delta_acc_1_burn2",  # Col 39: delta acc(1) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_2_burn2",  # Col 40: delta acc(2) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_3_burn2",  # Col 41: delta acc(3) wrt prediction (10-6m/s2)[E20.13]
)
# Rename columns manually
colnames(tle_parsed) <- c("satellite_name",     # Col 1: Satellite identification
"beg_man_year",       # Col 2: Beginning of maneuver: Year
"beg_man_day",        # Col 3: Beginning of maneuver: Day of year
"beg_man_hour",       # Col 4: Beginning of maneuver: hour
"beg_man_min",        # Col 5: Beginning of maneuver: minute
"end_man_year",       # Col 6: End of maneuver: Year
"end_man_day",        # Col 7 : End of maneuver: Day of year
"end_man_hour",       # Col 8: End of maneuver: hour
"end_man_min",        # Col 9: End of maneuver: minute (last column for topex)
"man_parameter_type", # Col 10: Maneuver parameter type
"num_burns",          # Col 11: number of burns (N)
"med_man_year",       # Col 12: median date of maneuver: Year YYYY
"med_man_day",        # Col 13: median date of maneuver: Day of year DDD
"med_man_hour",       # Col 14: median date of maneuver: hour HH
"med_man_min",        # Col 15: median date of maneuver: minute MM
"med_man_sec",        # Col 16: median date of maneuver: second.mlsecond:  SS.mss
"boost_duration",     # Col 17: boost duration (sec) [E20.13]
"DV_1",               # Col 18: DV(1) (m/s)  [E20.13]
"DV_2",               # Col 19: DV(2) (m/s)  [E20.13]
"DV_3",               # Col 20: DV(3) (m/s)  [E20.13]
"acc_1",              # Col 21: acceleration, acc(1) (10-6m/s2)  [E20.13]
"acc_2",              # Col 22: acceleration, acc(2) (10-6m/s2)  [E20.13]
"acc_3",              # Col 23: acceleration, acc(3) (10-6m/s2)  [E20.13]
"delta_acc_1",        # Col 24: delta acc(1) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_2",        # Col 25: delta acc(2) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_3",        # Col 26: delta acc(3) wrt prediction (10-6m/s2)[E20.13]
"med_man_year_burn2", # Col 27: median date of maneuver: Year YYYY
"med_man_day_burn2",  # Col 28: median date of maneuver: Day of year DDD
"med_man_hour_burn2", # Col 29: median date of maneuver: hour HH
"med_man_min_burn2",  # Col 30: median date of maneuver: minute MM
"med_man_sec_burn2",  # Col 31: median date of maneuver: second.mlsecond:  SS.mss
"boost_duration_burn2", # Col 32: boost duration (sec) [E20.13]
"DV_1_burn2",         # Col 33: DV(1) (m/s)  [E20.13]
"DV_2_burn2",         # Col 34: DV(2) (m/s)  [E20.13]
"DV_3_burn2",         # Col 35: DV(3) (m/s)  [E20.13]
"acc_1_burn2",        # Col 36: acceleration, acc(1) (10-6m/s2)  [E20.13]
"acc_2_burn2",        # Col 37: acceleration, acc(2) (10-6m/s2)  [E20.13]
"acc_3_burn2",        # Col 38: acceleration, acc(3) (10-6m/s2)  [E20.13]
"delta_acc_1_burn2",  # Col 39: delta acc(1) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_2_burn2",  # Col 40: delta acc(2) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_3_burn2" # Col 41: delta acc(3) wrt prediction (10-6m/s2)[E20.13]
)
# View the renamed columns
head(tle_parsed)
tle_parsed$med_man_sec
read.table(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Read the data
tle_data <- readLines(here::here("satellite_data","manoeuvres", "cs2man.txt"))
# Split data by multiple spaces using read.table
tle_parsed <- read.table(text = tle_data, header = FALSE, fill = TRUE,
sep = "", strip.white = TRUE)
# View the parsed data
print(tle_parsed)
# Rename columns manually
colnames(tle_parsed) <- c("satellite_name",     # Col 1: Satellite identification
"beg_man_year",       # Col 2: Beginning of maneuver: Year
"beg_man_day",        # Col 3: Beginning of maneuver: Day of year
"beg_man_hour",       # Col 4: Beginning of maneuver: hour
"beg_man_min",        # Col 5: Beginning of maneuver: minute
"end_man_year",       # Col 6: End of maneuver: Year
"end_man_day",        # Col 7 : End of maneuver: Day of year
"end_man_hour",       # Col 8: End of maneuver: hour
"end_man_min",        # Col 9: End of maneuver: minute (last column for topex)
"man_parameter_type", # Col 10: Maneuver parameter type
"num_burns",          # Col 11: number of burns (N)
"med_man_year",       # Col 12: median date of maneuver: Year YYYY
"med_man_day",        # Col 13: median date of maneuver: Day of year DDD
"med_man_hour",       # Col 14: median date of maneuver: hour HH
"med_man_min",        # Col 15: median date of maneuver: minute MM
"med_man_sec",        # Col 16: median date of maneuver: second.mlsecond:  SS.mss
"boost_duration",     # Col 17: boost duration (sec) [E20.13]
"DV_1",               # Col 18: DV(1) (m/s)  [E20.13]
"DV_2",               # Col 19: DV(2) (m/s)  [E20.13]
"DV_3",               # Col 20: DV(3) (m/s)  [E20.13]
"acc_1",              # Col 21: acceleration, acc(1) (10-6m/s2)  [E20.13]
"acc_2",              # Col 22: acceleration, acc(2) (10-6m/s2)  [E20.13]
"acc_3",              # Col 23: acceleration, acc(3) (10-6m/s2)  [E20.13]
"delta_acc_1",        # Col 24: delta acc(1) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_2",        # Col 25: delta acc(2) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_3",        # Col 26: delta acc(3) wrt prediction (10-6m/s2)[E20.13]
"med_man_year_burn2", # Col 27: median date of maneuver: Year YYYY
"med_man_day_burn2",  # Col 28: median date of maneuver: Day of year DDD
"med_man_hour_burn2", # Col 29: median date of maneuver: hour HH
"med_man_min_burn2",  # Col 30: median date of maneuver: minute MM
"med_man_sec_burn2",  # Col 31: median date of maneuver: second.mlsecond:  SS.mss
"boost_duration_burn2", # Col 32: boost duration (sec) [E20.13]
"DV_1_burn2",         # Col 33: DV(1) (m/s)  [E20.13]
"DV_2_burn2",         # Col 34: DV(2) (m/s)  [E20.13]
"DV_3_burn2",         # Col 35: DV(3) (m/s)  [E20.13]
"acc_1_burn2",        # Col 36: acceleration, acc(1) (10-6m/s2)  [E20.13]
"acc_2_burn2",        # Col 37: acceleration, acc(2) (10-6m/s2)  [E20.13]
"acc_3_burn2",        # Col 38: acceleration, acc(3) (10-6m/s2)  [E20.13]
"delta_acc_1_burn2",  # Col 39: delta acc(1) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_2_burn2",  # Col 40: delta acc(2) wrt prediction (10-6m/s2)[E20.13]
"delta_acc_3_burn2" # Col 41: delta acc(3) wrt prediction (10-6m/s2)[E20.13]
)
# View the renamed columns
head(tle_parsed)
# Create beginning and end maneuver datetime
tle_parsed$beg_man_datetime <- as_datetime(paste0(tle_parsed$beg_man_year, "-01-01")) +
days(tle_parsed$beg_man_day) + hours(tle_parsed$beg_man_hour) + minutes(tle_parsed$beg_man_min)
pacman::p_load(tidyverse, lubridate)
# Create beginning and end maneuver datetime
tle_parsed$beg_man_datetime <- as_datetime(paste0(tle_parsed$beg_man_year, "-01-01")) +
days(tle_parsed$beg_man_day) + hours(tle_parsed$beg_man_hour) + minutes(tle_parsed$beg_man_min)
tle_parsed$end_man_datetime <- as_datetime(paste0(tle_parsed$end_man_year, "-01-01")) +
days(tle_parsed$end_man_day) + hours(tle_parsed$end_man_hour) + minutes(tle_parsed$end_man_min)
# View the tle_parsed
print(tle_parsed)
tle_parsed_time <- tle_parsed |> select(beg_man_datetime, end_man_datetime)
View(tle_parsed)
qnoem(0.025)
qnorm(0.025)
qnorm(0.925)
qnorm(1-0.025)
RStudio.Version()
gc()
library(readr)
cryosat <- read_csv("satellite_data/orbital_elements/unpropagated_elements_CryoSat-2.csv")
View(cryosat)
library(readr)
cryosat <- read_csv("satellite_data/orbital_elements/unpropagated_elements_CryoSat-2.csv")
View(cryosat)
library(readr)
jason_1 <- read_csv("satellite_data/orbital_elements/unpropagated_elements_Jason-1.csv")
View(jason_1)
library(readr)
jason_2 <- read_csv("satellite_data/orbital_elements/unpropagated_elements_Jason-2.csv")
View(jason_2)
library(readr)
jason_3 <- read_csv("satellite_data/orbital_elements/unpropagated_elements_Jason-3.csv")
View(jason_3)
library(readr)
saral <- read_csv("satellite_data/orbital_elements/unpropagated_elements_SARAL.csv")
View(saral)
library(readr)
sent3a <- read_csv("satellite_data/orbital_elements/unpropagated_elements_Sentinel-3A.csv")
View(sent3a)
library(readr)
sent3b <- read_csv("satellite_data/orbital_elements/unpropagated_elements_Sentinel-3B.csv")
View(sent3b)
library(readr)
sent6a <- read_csv("satellite_data/orbital_elements/unpropagated_elements_Sentinel-6A.csv")
View(sent6a)
library(readr)
topex <- read_csv("satellite_data/orbital_elements/unpropagated_elements_TOPEX.csv")
View(topex)
cryosat %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
pacman::p_load(tidyverse)
cryosat %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
sent3a
sent3a %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
topex %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
topex %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
topex %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
topex %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
topex %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
topex %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
cryosat %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
jason_1 %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
jason_2 %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
jason_3 %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
saral %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
sent3a %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
# PICK SENT3B
sent3b %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
sent3b %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = `argument of perigee`)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = inclination)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = `mean anomaly`)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = `Brouwer mean motion`)) + geom_point() + theme_minimal()
sent6a %>% ggplot(aes(x = ...1, y = `right ascension`)) + geom_point() + theme_minimal()
topex %>% ggplot(aes(x = ...1, y = eccentricity)) + geom_point() + theme_minimal()
